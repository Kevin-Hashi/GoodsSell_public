@startuml Order_confirm
interface SheetNamesForCallOptions {
    +orderSheetName: string
    +mailLogSheetName: string
    +itemListSheetName: string
    +itemGroupSheetName: string
    +usedOrderNumberSheetName: string
    +propertySheetName: string
}
interface CallOptions {
    +sheetId: string
    +sheetNames: SheetNamesForCallOptions
    +SS_API_URL: string
    +contact: string
    +sendinblueApiKey: string
}
interface ItemCol extends Object {
    +itemCol: number
}
interface ItemColWithSize extends ItemCol {
    +sizeCol: number
}
interface ItemGroup {
    +name: string
    +itemColList: ItemColList
    +type: "ByName" | "ByQuantity"
}
class ItemGroupMap extends Map
interface ItemDataBase {
    +name: string
    +itemGroupName: string
    +size: string
}
interface ItemData extends ItemDataBase {
    +price: number
}
class ItemDataMap extends Map
class ItemDataGroup extends Map
namespace DefinedType {
}
interface SheetIdName {
    +sheetId: string
    +sheetName?: string
}
interface GASRequestBodyTypeBase {
    +oprationType: "GET_ORDER" | "ADD_ORDER" | "EDIT_ORDER" | "EDIT_ORDER_BY_FINDER" | "ADD_SHEET_NAME" | "GET_SHEETS_NAME" | "GET_SHEET_DATA"
    +data: { sheetData: SheetIdName; }
}
interface AddRecordDataBase {
    +row?: number
}
interface AddRecordData extends AddRecordDataBase {
    +data: cell[]
}
interface AddRecordDataArray extends AddRecordDataBase {
    +data: cell[][]
}
interface EditByFinderRecordData extends RecordGet {
    +editCol: number
    +value: cell
}
interface GASRequestBodyAddData extends GASRequestBodyTypeBase {
    +data: { sheetData: SheetIdName; addData: AddRecordData | AddRecordDataArray; }
}
interface GASRequestBodyEditData extends GASRequestBodyTypeBase {
    +data: { sheetData: SheetIdName; editData: EditRecordData; }
}
interface GASRequestBodyEditByFinderData extends GASRequestBodyTypeBase {
    +data: { sheetData: SheetIdName; editDataByFinder: EditByFinderRecordData; }
}
interface GASRequestBodyAddSheetName extends GASRequestBodyTypeBase {
    +data: { sheetData: SheetIdName; addSheetName: string; }
}
interface GASRequestBodyGetSheetsName extends GASRequestBodyTypeBase
interface RecordGet {
    +col: number
    +finder: cell
}
interface GASRequestBodyGetData extends GASRequestBodyTypeBase {
    +data: { sheetData: SheetIdName; getData: RecordGet; }
}
interface GASRequestBodyGetSheetData extends GASRequestBodyTypeBase
interface GetInitSheetDataSheetNames {
    +itemList: string
    +itemGroup: string
    +property: string
}
interface PropertyCol {
    +mailAddress: number
    +orderNumber: number
    +name: number
    +bought: number
    +studentNumber: number
    +timestamp: number
}
namespace DefinedType {
}
abstract class ExtendBaseError extends Error
class GASfetchError extends ExtendBaseError
class EmptyOrderError extends ExtendBaseError
class InvalidOrderNumberError extends ExtendBaseError
interface SheetIdAndSS_API_URL {
    +sheetId: string
    +SS_API_URL: string
}
class FetchUtils {
    +{static} fetchRetry(url: string, headers: { [key: string]: any; }, payload: { [key: string]: any; }, endDetector: (response: GoogleAppsScript.URL_Fetch.HTTPResponse) => boolean, retry?: number): any
    +{static} fetchRetryGET(url: string, headers: { [key: string]: any; }, payload: { [key: string]: any; }, endDetector: (response: GoogleAppsScript.URL_Fetch.HTTPResponse) => boolean, retry?: number): any
    +{static} fetchRetryBase(url: string, options: GoogleAppsScript.URL_Fetch.URLFetchRequestOptions, endDetector: (response: GoogleAppsScript.URL_Fetch.HTTPResponse) => boolean, retry?: number): any
}
class SS_API_FetchUtils {
    -sheetIdAndSS_API_URL: SheetIdAndSS_API_URL
    -retry: number
    -endDetector: (response: GoogleAppsScript.URL_Fetch.HTTPResponse) => boolean
    +fetchRetry(headers: { [key: string]: any; }, payload: { [key: string]: any; }): any
    +fetchRetryGET(headers: { [key: string]: any; }, payload: { [key: string]: any; }): any
}
class SheetUtils {
    -sheetIdAndSS_API_URL: SheetIdAndSS_API_URL
    +isExistSheet(sheetName: string): boolean
    +getSheetData(sheetName: string): SheetData
    +createSheet(sheetName: string): void
}
abstract class BasePool<T, S, U> {
    #oldSet: Set<T>
    #currentSet: Set<S>
    #sheetUtils: SheetUtils
    #SS_API_FetchRetry: SS_API_FetchUtils
    #sheetIdAndSS_API_URL: SheetIdAndSS_API_URL
    +{abstract} fromSheet(sheetData: SheetData): void
    +{abstract} writeLog(sheetName: string): void
    +{abstract} generate(): U
    +{abstract} add(S: S): void
}
class MailLogPool extends BasePool {
    #lastSend: number
    +fromSheet(sheetData: SheetData): void
    +generate(): Date
    +add(sendDateNumberAndMessageId: [number, string]): void
    +writeLog(sheetName: string): void
}
class TextContent {
    +textContent: string
    +toHtml(): string
}
abstract class GASHtmlElement {
    #{abstract} tag: string
    #{abstract} style: string
    #children: (GASHtmlElement | TextContent)[]
    +appendChild(child: GASHtmlElement | TextContent): GASHtmlElement
    +toHtml(): string
}
class Td extends GASHtmlElement {
    #tag: string
    #style: string
}
class Th extends Td {
    #tag: string
}
class Tr extends GASHtmlElement {
    #tag: string
    #style: string
}
interface Attachment {
    +content: string
    +name: string
}
class MailCreator {
    +mailLogPool: MailLogPool
    #apiKey: string
    +sendMail(to: string, textContent: string, htmlContent: string, subject: string, attachment: Attachment[], schedule: Date, retry?: number): GoogleAppsScript.URL_Fetch.HTTPResponse
    +{static} createMailSubject(): string
    +{static} createTextMailBody(name: string, studentNumber: string, orderNumber: number, orderItemWithPrice: [Map<ItemData, number>, number], contact: string): string
    +{static} createHtmlMailBody(name: string, studentNumber: string, orderNumber: number, orderItemWithPrice: [Map<ItemData, number>, number], contact: string, subject: string): string
}
interface accountResponse {
    +email: string
    +firstName: string
    +lastName: string
    +companyName: string
    +address: { street: string; city: string; zipCode: string; country: string; }
    +plan: { type: PlanType; credits: number; creditsType: "sendLimit"; }[]
    +relay: { enabled: boolean; data: {    userName: string;    relay: string;    port: number;}; }
    +marketingAutomation: { key?: string; enabled: boolean; }
}
class MailLimitChecker {
    #url: string
    #_remaining: number
    +remaining: number
    #apiKey: string
    +getFreeMailLimit(): number
    +send(): void
}
namespace CheckDigit {
    class Damm {
        +opTable: readonly [readonly [0, 3, 1, 7, 5, 9, 8, 6, 4, 2], readonly [7, 0, 9, 2, 1, 5, 4, 8, 6, 3], readonly [4, 2, 0, 6, 8, 7, 1, 3, 5, 9], readonly [1, 7, 5, 0, 9, 8, 3, 4, 2, 6], readonly [6, 1, 2, 3, 0, 4, 5, 9, 7, 8], readonly [...], readonly [...], readonly [...], readonly [...], readonly [...]]
        +computeFromNumVals(ns: number[]): number[]
        +compute(s: string): string
        +parse(s: string): [string, string]
        +generate(s: string): string
        +validate(s: string): boolean
    }
}
class UsedOrderNumberPool extends BasePool {
    -_currentMaxOrderNumber: number
    +currentMaxOrderNumber: number
    +fromSheet(sheetData: SheetData): void
    +add(number: number): void
    +generate(): number
    +writeLog(sheetName: string): void
}
class OrderNumberCreator {
    -checkDigit: CheckDigit.Damm
    #usedOrderNumberPool: UsedOrderNumberPool
    +create(): number
}
class ItemList {
    #itemGroupMap: ItemGroupMap
    #itemDataGroup: ItemDataGroup
    +forEachItemGroupMap: any
    +forEachItemDataGroup: any
    +addItemGroup(itemGroup: ItemGroup): void
    +addItem(itemData: ItemData): void
    +getItemGroup(itemGroupName: string): ItemGroup
    +getItemDataMap(itemGroup: ItemGroup): ItemDataMap
    #initItemDataMap(itemGroup: ItemGroup): void
    +{static} createItemDataId(itemData: ItemDataBase): string
}
class SellSystem {
    #sheetId: string
    #orderSheetName: string
    #itemList: ItemList
    #scriptUrl: RequestInfo | URL
    #fetchRetryCount: number
    +setSheetId(sheetId: string): void
    +setOrderSheetName(sheetName: string): void
    #_propertyCol: PropertyCol
    #getInitData(sheetData: { itemList: SheetData; itemGroup: SheetData; property: SheetData; }): void
    #parseOrder(order: RowData): [Map<ItemData, number>, number]
    -{static} getMapWithoutUndefined(map: Map<T, S>, key: T): S
    -{static} addOrderItem(item: ItemData, num: number, numOfItem: Map<ItemData, number>): void
}
class SellSystemForGAS extends SellSystem {
    #scriptUrl: string
    +propertyCol: PropertyCol
    +getInitSheetData(sheetNames: GetInitSheetDataSheetNames): void
    +parseOrder(order: RowData): [Map<ItemData, number>, number]
    -getProperty(data: RowData, key: number): cell
    +getName(order: RowData): string
    +getMailAddress(order: RowData): string
    +getStudentNumber(order: RowData): string
}
class CreateQR {
    +{static} createQR(data: string): string
    +{static} QueryString(obj: { [x: string]: string; }, encode?: any): string
}
class Batch {
    +sheetUtils: SheetUtils
    +sheetNames: { orderSheetName: string; mailLogSheetName: string; itemListSheetName: string; itemGroupSheetName: string; usedOrderNumberSheetName: string; propertySheetName: string; }
    -callOptions: CallOptions
    +sendMailBatch(): void
    -end(mailCreator: MailCreator, usedOrderNumberPool: UsedOrderNumberPool, editList: EditRecordData, callOptions: CallOptions): void
}
CallOptions --> "1" SheetNamesForCallOptions
GASRequestBodyTypeBase --> "1" SheetIdName
GASRequestBodyAddData --> "1" SheetIdName
GASRequestBodyAddData --> "1" AddRecordData
GASRequestBodyAddData --> "1" AddRecordDataArray
GASRequestBodyEditData --> "1" SheetIdName
GASRequestBodyEditByFinderData --> "1" SheetIdName
GASRequestBodyEditByFinderData --> "1" EditByFinderRecordData
GASRequestBodyAddSheetName --> "1" SheetIdName
GASRequestBodyGetData --> "1" SheetIdName
GASRequestBodyGetData --> "1" RecordGet
SS_API_FetchUtils --> "1" SheetIdAndSS_API_URL
SheetUtils --> "1" SheetIdAndSS_API_URL
BasePool --> "1" SheetUtils
BasePool --> "1" SS_API_FetchUtils
BasePool --> "1" SheetIdAndSS_API_URL
GASHtmlElement --> "1" TextContent
MailCreator --> "1" MailLogPool
MailCreator --> "1" Attachment
MailCreator --> "1" ItemData
OrderNumberCreator --> "1" UsedOrderNumberPool
ItemList --> "1" ItemGroupMap
ItemList --> "1" ItemDataGroup
ItemList --> "1" ItemGroup
ItemList --> "1" ItemData
ItemList --> "1" ItemDataMap
ItemList --> "1" ItemDataBase
SellSystem --> "1" ItemList
SellSystem --> "1" PropertyCol
SellSystem --> "1" ItemData
SellSystemForGAS --> "1" PropertyCol
SellSystemForGAS --> "1" GetInitSheetDataSheetNames
SellSystemForGAS --> "1" ItemData
Batch --> "1" SheetUtils
Batch --> "1" CallOptions
Batch --> "1" MailCreator
Batch --> "1" UsedOrderNumberPool
@enduml
